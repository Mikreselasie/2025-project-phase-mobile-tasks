// Mocks generated by Mockito 5.4.6 from annotations
// in ecommerce/test/features/auth/data/data_sources/auth_remote_data_source_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:ecommerce/core/network/http.dart' as _i3;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMultipartRequest_1 extends _i1.SmartFake
    implements _i2.MultipartRequest {
  _FakeMultipartRequest_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeHttpResponse_2 extends _i1.SmartFake implements _i3.HttpResponse {
  _FakeHttpResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [HttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i3.HttpClient {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeClient_0(this, Invocation.getter(#client)),
          )
          as _i2.Client);

  @override
  _i2.MultipartRequest Function(_i3.HttpMethod, String)
  get multipartRequestFactory =>
      (super.noSuchMethod(
            Invocation.getter(#multipartRequestFactory),
            returnValue: (_i3.HttpMethod __p0, String __p1) =>
                _FakeMultipartRequest_1(
                  this,
                  Invocation.getter(#multipartRequestFactory),
                ),
          )
          as _i2.MultipartRequest Function(_i3.HttpMethod, String));

  @override
  set authToken(String? token) => super.noSuchMethod(
    Invocation.setter(#authToken, token),
    returnValueForMissingStub: null,
  );

  @override
  _i4.Future<_i3.HttpResponse> get(String? url) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url]),
            returnValue: _i4.Future<_i3.HttpResponse>.value(
              _FakeHttpResponse_2(this, Invocation.method(#get, [url])),
            ),
          )
          as _i4.Future<_i3.HttpResponse>);

  @override
  _i4.Future<_i3.HttpResponse> post(
    String url,
    Map<String, dynamic> body, {
    required String bodyText,
    required Map<String, String> headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url, body],
              {#body: body, #headers: headers},
            ),
            returnValue: _i4.Future<_i3.HttpResponse>.value(
              _FakeHttpResponse_2(
                this,
                Invocation.method(
                  #post,
                  [url, body],
                  {#body: body, #headers: headers},
                ),
              ),
            ),
          )
          as _i4.Future<_i3.HttpResponse>);

  @override
  _i4.Future<_i3.HttpResponse> put(String? url, Map<String, dynamic>? body) =>
      (super.noSuchMethod(
            Invocation.method(#put, [url, body]),
            returnValue: _i4.Future<_i3.HttpResponse>.value(
              _FakeHttpResponse_2(this, Invocation.method(#put, [url, body])),
            ),
          )
          as _i4.Future<_i3.HttpResponse>);

  @override
  _i4.Future<_i3.HttpResponse> delete(String? url) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [url]),
            returnValue: _i4.Future<_i3.HttpResponse>.value(
              _FakeHttpResponse_2(this, Invocation.method(#delete, [url])),
            ),
          )
          as _i4.Future<_i3.HttpResponse>);

  @override
  _i4.Future<_i3.HttpResponse> uploadFile(
    String? url,
    _i3.HttpMethod? method,
    Map<String, String>? body,
    List<_i3.UploadFile>? files,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#uploadFile, [url, method, body, files]),
            returnValue: _i4.Future<_i3.HttpResponse>.value(
              _FakeHttpResponse_2(
                this,
                Invocation.method(#uploadFile, [url, method, body, files]),
              ),
            ),
          )
          as _i4.Future<_i3.HttpResponse>);
}
